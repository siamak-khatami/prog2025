name: DevopsWF

on: 
    push:
        branches: [main, devops]

jobs:
    Job1: 
        runs-on: ubuntu-latest
        steps:
            - name: Hello World
              run: echo "Hello World!"
    Job2: 
        runs-on: ubuntu-latest
        steps:
            - name: Hello World
              run: echo "Hello World!"
    Testing: 
        runs-on: ubuntu-latest
        needs: [Job1, Job2]
        steps:
            - name: show the repo
              run: ls
            - name: Getting the code to the runner
              uses: actions/checkout@v3
            - name: show the repo
              run: ls
            - name: Testing
              run: |
                echo "Testing started!"
                echo "Testing ..."
                echo "Testing finished!"
    Job3: 
        runs-on: ubuntu-latest
        steps:
            - name: Hello World
              run: echo "Hello World!"
    Build: 
        runs-on: ubuntu-latest
        needs: [Testing, Job3]
        steps:
            - name: Getting the code to the runner
              uses: actions/checkout@v3
            - name: Building the app
              run: go build -o Prog2025 .
            - name: repo
              run: ls
            - name: Making artifact to export the app
              uses: actions/upload-artifact@v4
              with:
                name: Prog2025Artifact
                path: Prog2025
            - name: Set Git config
            ##### You need to give permission to the Actions Bot from settings.
            ##### Or you need to have a PAT token to upload.
              run: |
                  git config --local user.email "khatami.sia@gmail.com"
                  git config --local user.name "Siamak Khatami"
            - name: Merge dev back to master
              run: |
                git fetch --unshallow
                git checkout master 
                git pull origin master 
                git merge --no-ff devops -m "Auto-merge devops back to master"
                git push https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/siamak-khatami/prog2025.git master
    DeployApp:
        runs-on: ubuntu-latest
        needs: Build
        steps: 
            ## Your prod does not checkout the code, it downloads the artifact. So, there is no git config.cancel-timeout-minutes: 
            ## We need to clone the repo (which can be empty at start), and checkout to the desired branch (here the master) and then push to that branch.cancel-timeout-minutes: 
            ## if you do not clone the repo, it will have history problems.
            - name: Init git
              run: |
                  git clone https://oauth2:${{secrets.GITLAB_TOKEN2}}@git.gvk.idi.ntnu.no/course/prog2005/prog2005-2025-workspace/khatami/production.git .
                  git remote add production https://oauth2:${{secrets.GITLAB_TOKEN2}}@git.gvk.idi.ntnu.no/course/prog2005/prog2005-2025-workspace/khatami/production.git
                  git config --local user.name "siamak"
                  git config --local user.email "siamak.khatami@ntnu.no"
                  # If no 'master' branch, create it
                  if [ $(git branch -r | grep -c 'origin/master') -eq 0 ]; then
                    echo "No master branch found. Creating 'master' branch."
                    git checkout -b master
                  else
                    git checkout master
                  fi
            - name: Get the built Artifact
              uses: actions/download-artifact@v4
              with:
                name: Prog2025Artifact
            - name: Commit changes
              run: |
                  ls
                  git add .
                  git commit -m "Production file updated!"
                  git push production master
            - name: Pushing to Gitlab
            ##### You need to give permission to the Actions Bot from settings.
            ##### Or you need to have a PAT token to upload.
            ##### We didn't checkout the code, so there is no git config. 
            ##### git remote add old "https://github.com/siamak-khatami/prog2025.git"
            ##### git fetch --unshallow old
            ##### 
              run: echo "Done!"
    DeployProdCode:
        runs-on: ubuntu-latest
        needs: [Build, DeployApp]
        steps: 
            ## Your prod does not checkout the code, it downloads the artifact. So, there is no git config.cancel-timeout-minutes: 
            ## We need to clone the repo (which can be empty at start), and checkout to the desired branch (here the master) and then push to that branch.cancel-timeout-minutes: 
            ## if you do not clone the repo, it will have history problems.
            - name: Getting the code to the runner
              uses: actions/checkout@v3  
            - name: Commit changes
              run: | 
                git remote add old "https://github.com/siamak-khatami/prog2025.git"
                git fetch --unshallow old
                git config --local user.name "siamak"
                git config --local user.email "siamak.khatami@ntnu.no"
                git checkout master
                git remote set-url origin https://oauth2:${{secrets.GITLAB_PRODCODE_TOKEN}}@git.gvk.idi.ntnu.no/course/prog2005/prog2005-2025-workspace/khatami/progcode.git
                git push origin master
                
            